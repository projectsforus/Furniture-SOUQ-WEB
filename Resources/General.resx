<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="ADD" xml:space="preserve">
    <value>ADD</value>
  </data>
  <data name="AddCart" xml:space="preserve">
    <value>Add To Cart</value>
  </data>
  <data name="AddedToCart" xml:space="preserve">
    <value>Added To Cart</value>
  </data>
  <data name="AddOffer" xml:space="preserve">
    <value>Add Offer</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add New Product</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AOffer" xml:space="preserve">
    <value>Add Offer</value>
  </data>
  <data name="AProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="Because" xml:space="preserve">
    <value>Couse We have Best Quilty</value>
  </data>
  <data name="BList" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="CheckOut" xml:space="preserve">
    <value>Check Out</value>
  </data>
  <data name="chooseUs" xml:space="preserve">
    <value>Why Choose Us</value>
  </data>
  <data name="chOuDS" xml:space="preserve">
    <value>Check Out Done Succesful</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DeleteOffer" xml:space="preserve">
    <value>Delete Offer</value>
  </data>
  <data name="DeleteProduct" xml:space="preserve">
    <value>Delete Product</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="dir" xml:space="preserve">
    <value>ltr</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="EDate" xml:space="preserve">
    <value>Expire Date</value>
  </data>
  <data name="EditODetails" xml:space="preserve">
    <value>Edit Offer Details</value>
  </data>
  <data name="EditPDetails" xml:space="preserve">
    <value>Edit Product Details</value>
  </data>
  <data name="EditPersonalInfo" xml:space="preserve">
    <value>Edit Personal Info</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Emonth" xml:space="preserve">
    <value>Expire Month</value>
  </data>
  <data name="EnCaNu" xml:space="preserve">
    <value>Enter Card Number</value>
  </data>
  <data name="EnCarNa" xml:space="preserve">
    <value>Enter Card Name</value>
  </data>
  <data name="Encvc" xml:space="preserve">
    <value>Enter CVC</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorMsg" xml:space="preserve">
    <value>There Is Error ... Please Go To Home</value>
  </data>
  <data name="Eyear" xml:space="preserve">
    <value>Expire Year</value>
  </data>
  <data name="facebook" xml:space="preserve">
    <value>FaceBook</value>
  </data>
  <data name="FeedBack" xml:space="preserve">
    <value>FeedBack</value>
  </data>
  <data name="FillInfo" xml:space="preserve">
    <value>Please Fill Info</value>
  </data>
  <data name="inmap" xml:space="preserve">
    <value>in a full screen map</value>
  </data>
  <data name="InPassword" xml:space="preserve">
    <value>Inccorect Password</value>
  </data>
  <data name="Instagram" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="InUpSu" xml:space="preserve">
    <value>Info Updated Succesful</value>
  </data>
  <data name="lang" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="maxPrice" xml:space="preserve">
    <value>Max Price</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="minPrice" xml:space="preserve">
    <value>Min Price</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="NoQty" xml:space="preserve">
    <value>No Qty</value>
  </data>
  <data name="nsOffer" xml:space="preserve">
    <value>No Selected Offers</value>
  </data>
  <data name="nsProduct" xml:space="preserve">
    <value>No Selected Products</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Offer" xml:space="preserve">
    <value>Offer</value>
  </data>
  <data name="OfferDeleted" xml:space="preserve">
    <value>Offer Deleted</value>
  </data>
  <data name="OfferDetails" xml:space="preserve">
    <value>Offer Details</value>
  </data>
  <data name="OfferEdited" xml:space="preserve">
    <value>Offer Updated</value>
  </data>
  <data name="Offers" xml:space="preserve">
    <value>Offers</value>
  </data>
  <data name="OurOffers" xml:space="preserve">
    <value>Our Offers</value>
  </data>
  <data name="OurProducts" xml:space="preserve">
    <value>Our Products</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PRFirst" xml:space="preserve">
    <value>Please Register First</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductDeleted" xml:space="preserve">
    <value>Product Deleted</value>
  </data>
  <data name="ProductDetails" xml:space="preserve">
    <value>Product Details</value>
  </data>
  <data name="ProductEdited" xml:space="preserve">
    <value>Product Updated</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RMsg" xml:space="preserve">
    <value>Registerd succesful...Log In</value>
  </data>
  <data name="saudiarabia" xml:space="preserve">
    <value>Saudi Arabia</value>
  </data>
  <data name="SDetails" xml:space="preserve">
    <value>Show Details</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SendedSuccesful" xml:space="preserve">
    <value>Sended Succesful</value>
  </data>
  <data name="SendFeedback" xml:space="preserve">
    <value>Send Feedback</value>
  </data>
  <data name="SendMessage" xml:space="preserve">
    <value>Send Message</value>
  </data>
  <data name="ShowF" xml:space="preserve">
    <value>Show Our Facebook</value>
  </data>
  <data name="ShowI" xml:space="preserve">
    <value>Show Our Instagram</value>
  </data>
  <data name="ShowMsg" xml:space="preserve">
    <value>Ut nulla libero, luctus quis varius efficitur, molestie non felis. Phasellus eget rutrum enim. Sed ac est tincidunt, tristique quam aliquam</value>
  </data>
  <data name="ShowT" xml:space="preserve">
    <value>Show Our Twitter</value>
  </data>
  <data name="Sign" xml:space="preserve">
    <value>Sign</value>
  </data>
  <data name="SR" xml:space="preserve">
    <value>S.R</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="TellUsMore" xml:space="preserve">
    <value>Tell Us More</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="twiter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload Image</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="AR" xml:space="preserve">
    <value>AR</value>
  </data>
  <data name="EN" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="dircl" xml:space="preserve">
    <value>right</value>
  </data>
  <data name="LAQY" xml:space="preserve">
    <value>LAQY</value>
  </data>
  <data name="langtex" xml:space="preserve">
    <value>ar</value>
  </data>
  <data name="EmailExist" xml:space="preserve">
    <value>This Email Is Exist &gt;&gt;&gt; Please Login</value>
  </data>
</root>